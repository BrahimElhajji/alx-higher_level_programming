This is a doctest file for the matrix_divided function.

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test 1: Divide each element in the matrix by 3
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
    >>> matrix  # Ensure the original matrix is unchanged
    [[1, 2, 3], [4, 5, 6]]

# Test 2: Attempt to divide a matrix by 0 (should raise ZeroDivisionError)
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero


# Test 3: Attempt to divide a matrix with a non-numeric divisor (should raise TypeError)
    >>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], '2')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

# Test 4: Attempt to divide a matrix with rows of different sizes (should raise TypeError)
    >>> matrix_divided([[1, 2, 3], [4, 5], [7, 8, 9]], 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

 ``div`` must also be non-zero. Otherwise, a ZeroDivisionError is raised.

::

    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero
