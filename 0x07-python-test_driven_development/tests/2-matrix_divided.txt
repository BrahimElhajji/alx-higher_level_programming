This is a doctest file for the matrix_divided function.

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test 1: Divide each element in the matrix by 3
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
    >>> matrix  # Ensure the original matrix is unchanged
    [[1, 2, 3], [4, 5, 6]]

# Test 2: Attempt to divide a matrix by 0 (should raise ZeroDivisionError)
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero


# Test 3: Attempt to divide a matrix with a non-numeric divisor (should raise TypeError)
    >>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], '2')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

# Test 4: Attempt to divide a matrix with rows of different sizes (should raise TypeError)
    >>> matrix_divided([[1, 2, 3], [4, 5], [7, 8, 9]], 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

# Test 5: Attempt to divide a non-matrix (not a list of lists) by an integer
    >>> matrix_divided([1, 2, 3, 4], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test 6: Divide a matrix (list of lists of integers) by float(inf)
    >>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

# Test 7: Missing one argument
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]])
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

# Test 8: Missing two arguments
    >>> matrix_divided()
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
